# StatefulSets are preferred for stateful applications like databases because
# StatefulSets guarantees order of pod creation and deletion. If you're replacing
# one of your pods, the new pod will be created only after the old pod is deleted.
# That's important for a database application because you don't wanna have 2 pods
# using the same persistent volume. Pods in a StatefulSet also have consistent
# network names and persistent volumes. This means volume-1 will always be attached
# to pod-1.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  serviceName: mysql-headless
  # podManagementPolicy: Parallel # Create pods in parallel instead of sequentially
  selector:
    matchLabels:
      app: mysql
  replicas: 2
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-volume
  volumeClaimTemplates: # When a new replica is created, a persistent volume claim is made
    - metadata:
        name: mysql-volume
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
